#!/usr/bin/env bash
# shellcheck disable=SC2010

# NOTE: renpy wayland hack
if [[ $XDG_SESSION_TYPE == wayland && -e /usr/lib64/libSDL2-2.0.so ]]; then
	export SDL_DYNAMIC_API=/usr/lib64/libSDL2-2.0.so
	export SDL_VIDEODRIVER=wayland
fi

RENPY_DIR=${RENPY_DIR:-"${XDG_DATA_HOME:-"$HOME/.local/share"}/renpy"}

if [[ -z $1 ]]; then
	echo "No game provided!"; exit 201
elif ! command -v "$1" &>/dev/null; then
	echo "Invalid game: $1 must be in PATH or be path to executable."; exit 202
fi

prompt_yn() {
	while true; do
		echo
		read -n 1 -r -s -p "$1 [y/n] " yn
		case $yn in
			[Yy]*) printf '\n' && return 0 ;;
			[Nn]*) printf '\n' && return 1 ;;
		esac
	done
}

load_save() {
	mkdir -p "$HOME/.renpy"
	if ! cp -r "$RENPY_DIR/$game_dir" "$HOME/.renpy"; then
		echo "Error copying saves to ~/.renpy. Stopping."
		exit 221
	fi
}

store_save() {
	mkdir -p "$RENPY_DIR"
	if ! cp -r --remove-destination "$HOME/.renpy/$game_dir" "$RENPY_DIR"
	then
		echo "Error copying saves back from ~/.renpy. Stopping."
		echo "Your saves are still in '$HOME/.renpy/$game_name'!"
		exit 222
	fi
}

game_launcher="$1"
game_name=$(basename "${game_launcher%.*}")

if [[ -d $RENPY_DIR ]]; then
	game_dir=$(ls -1 "$RENPY_DIR" | grep "${2:-$game_name}" --ignore-case)
	game_dir=$(basename "$game_dir")
else
	first_run=y
fi

# Make sure we have the dirname (or this is the first play)
if [[ -z $game_dir && -z $first_run ]]; then
	echo "Couldn't get game save directory name."
	if prompt_yn "Is this your first time playing $game_name?"; then
		first_run=y
	else
		cat <<EOF
Consider providing the name of the game save directory as the second argument.
Can't continue without dirname. Stopping.
EOF
		exit 203
	fi
fi

# Check if game already running
if [[ -n $game_dir && -d $HOME/.renpy && -e $HOME/.renpy/$game_dir ]]; then
	cat <<EOF
"$game_dir" already in $HOME/.renpy! This might mean:
- $game_name is already running.
- A previous save was not properly stored and/or cleaned.
- An error occourred.
Stopping.
EOF
	exit 204
fi

# Copy saves into expected directory, if there are any
if [[ -z $first_run ]]; then
	load_save
fi

# Run the game
"$game_launcher" || exit $?

# If it's the first run, time to figure out where the game is saved!
if [[ -n $first_run ]]; then
	game_dir=$(ls -1 "$HOME/.renpy" | grep "${2:-$game_name}" --ignore-case)
	game_dir=$(basename "$game_dir")
	if [[ -z $game_dir ]]; then
		cat << EOF
Couldn't get game save directory name. In the future, consider providing the
name of the game save directory as the second argument to renplay. If $game_name
created a save, it's still in '$HOME/.renpy/' and you will need to move it to
'$RENPY_DIR' manually!
EOF
		exit 205
	fi
fi

# Copy saves back into custom directory, if there are any
if [[ -d $HOME/.renpy/$game_dir ]]; then
	store_save
	rm -rf "$HOME/.renpy/$game_dir" # Cleanup
fi

# Other games could be running, so we have to check if .renpy is empty
if [[ -z $(ls -A "$HOME/.renpy") ]]; then
	rmdir "$HOME/.renpy" # And if so, we delete it
fi
